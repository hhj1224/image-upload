[{"/Users/hong/Desktop/Image_upload/client/src/index.js":"1","/Users/hong/Desktop/Image_upload/client/src/App.js":"2","/Users/hong/Desktop/Image_upload/client/src/components/UploadForm.js":"3","/Users/hong/Desktop/Image_upload/client/src/components/ProgressBar.js":"4"},{"size":197,"mtime":1627122304342,"results":"5","hashOfConfig":"6"},{"size":325,"mtime":1627200939043,"results":"7","hashOfConfig":"6"},{"size":2364,"mtime":1627207050269,"results":"8","hashOfConfig":"6"},{"size":365,"mtime":1627205523484,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1yxax8y",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/hong/Desktop/Image_upload/client/src/index.js",[],["20","21"],"/Users/hong/Desktop/Image_upload/client/src/App.js",[],"/Users/hong/Desktop/Image_upload/client/src/components/UploadForm.js",["22","23"],"import React, { useState } from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport \"./UploadForm.css\"\nimport ProgressBar from './ProgressBar'\n\nconst UploadForm = () => {\n    const defaultFileName = \"이미지 파일을 업로드 해주세요.\";\n    const [file, setFile] = useState(null);\n    const [imgSrc, setImageSrc] =  useState(null);\n    const [fileName, setFileName] = useState(defaultFileName);\n    const [percent, setPercent] = useState(0);\n\n    const imageSelectHandler = (event) => {\n        const imageFile = event.target.files[0];\n        setFile(imageFile);\n        setFileName(imageFile.name);\n        const fileReader = new FileReader();\n        fileReader.readAsDataURL(imageFile);\n        fileReader.onload = (e) => setImageSrc(e.target.result);\n\n    };\n\n    const onSubmit = async (e) => {\n        e.preventDefault();// 기본행동(새로고침)방지\n        const formData = new FormData();\n        formData.append(\"image\", file)\n        try{\n            const res = await axios.post(\"/upload\", formData, {\n                headers: {\"Content-Type\": \"multipart/form-data\"},\n                onUploadProgress: (e) => {\n                    setPercent(Math.round((100 * e.loaded)/e.total));\n                }\n            });\n            toast.success(\"이미지 업로드 성공\");\n            setTimeout(() => {\n                setPercent(0);\n                setFileName(defaultFileName);\n                setImageSrc(null);\n            }, 3000);\n            \n        }catch(err){\n            toast.error(err.message);\n            setPercent(0);\n            setFileName(defaultFileName);\n            setImageSrc(null);\n            console.error(err);\n        }\n    }\n\n    return(\n        <form onSubmit={onSubmit}>\n            <img src={imgSrc} className={`image-preview ${imgSrc && \"image-preview-show\"}`} />\n            <ProgressBar percent={percent} />\n            <div className=\"file-dropper\">\n                {fileName}\n                <input \n                    id=\"image\" \n                    type=\"file\" \n                    accept=\"image/*\"\n                    onChange={imageSelectHandler}\n                />\n            </div>\n            <button type=\"submit\" style={{width: \"100%\", borderRadius: 3, height: 40, cursor: \"pointer\"}}>제출</button>\n        </form>\n    );\n};\n\nexport default UploadForm;","/Users/hong/Desktop/Image_upload/client/src/components/ProgressBar.js",[],{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","severity":1,"message":"29","line":29,"column":19,"nodeType":"30","messageId":"31","endLine":29,"endColumn":22},{"ruleId":"32","severity":1,"message":"33","line":53,"column":13,"nodeType":"34","endLine":53,"endColumn":95},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]