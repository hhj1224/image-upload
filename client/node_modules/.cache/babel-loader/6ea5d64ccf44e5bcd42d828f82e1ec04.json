{"ast":null,"code":"var _jsxFileName = \"/Users/hong/Desktop/Image_upload/client/src/components/UploadForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport \"./UploadForm.css\";\nimport ProgressBar from './ProgressBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UploadForm = ({\n  images,\n  setImages\n}) => {\n  _s();\n\n  const defaultFileName = \"이미지 파일을 업로드 해주세요.\";\n  const [file, setFile] = useState(null);\n  const [imgSrc, setImageSrc] = useState(null);\n  const [fileName, setFileName] = useState(defaultFileName);\n  const [percent, setPercent] = useState(0);\n\n  const imageSelectHandler = event => {\n    const imageFile = event.target.files[0];\n    setFile(imageFile);\n    setFileName(imageFile.name);\n    const fileReader = new FileReader();\n    fileReader.readAsDataURL(imageFile);\n\n    fileReader.onload = e => setImageSrc(e.target.result);\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault(); // 기본행동(새로고침)방지\n\n    const formData = new FormData();\n    formData.append(\"image\", file);\n\n    try {\n      const res = await axios.post(\"/images\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        },\n        onUploadProgress: e => {\n          setPercent(Math.round(100 * e.loaded / e.total));\n        }\n      });\n      console.log(res);\n      toast.success(\"이미지 업로드 성공\");\n      setTimeout(() => {\n        setPercent(0);\n        setFileName(defaultFileName);\n        setImageSrc(null);\n      }, 3000);\n    } catch (err) {\n      toast.error(err.message);\n      setPercent(0);\n      setFileName(defaultFileName);\n      setImageSrc(null);\n      console.error(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: imgSrc,\n      className: `image-preview ${imgSrc && \"image-preview-show\"}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n      percent: percent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-dropper\",\n      children: [fileName, /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"image\",\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: imageSelectHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      style: {\n        width: \"100%\",\n        borderRadius: 3,\n        height: 40,\n        cursor: \"pointer\"\n      },\n      children: \"\\uC81C\\uCD9C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UploadForm, \"OACYKDfYCOGBZICOigHU5K6jETw=\");\n\n_c = UploadForm;\nexport default UploadForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"sources":["/Users/hong/Desktop/Image_upload/client/src/components/UploadForm.js"],"names":["React","useState","axios","toast","ProgressBar","UploadForm","images","setImages","defaultFileName","file","setFile","imgSrc","setImageSrc","fileName","setFileName","percent","setPercent","imageSelectHandler","event","imageFile","target","files","name","fileReader","FileReader","readAsDataURL","onload","e","result","onSubmit","preventDefault","formData","FormData","append","res","post","headers","onUploadProgress","Math","round","loaded","total","console","log","success","setTimeout","err","error","message","width","borderRadius","height","cursor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAO,kBAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,MAAD;AAASC,EAAAA;AAAT,CAAD,KAAyB;AAAA;;AACxC,QAAMC,eAAe,GAAG,mBAAxB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACU,MAAD,EAASC,WAAT,IAAyBX,QAAQ,CAAC,IAAD,CAAvC;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAACO,eAAD,CAAxC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,CAAD,CAAtC;;AAEA,QAAMgB,kBAAkB,GAAIC,KAAD,IAAW;AAClC,UAAMC,SAAS,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAlB;AACAX,IAAAA,OAAO,CAACS,SAAD,CAAP;AACAL,IAAAA,WAAW,CAACK,SAAS,CAACG,IAAX,CAAX;AACA,UAAMC,UAAU,GAAG,IAAIC,UAAJ,EAAnB;AACAD,IAAAA,UAAU,CAACE,aAAX,CAAyBN,SAAzB;;AACAI,IAAAA,UAAU,CAACG,MAAX,GAAqBC,CAAD,IAAOf,WAAW,CAACe,CAAC,CAACP,MAAF,CAASQ,MAAV,CAAtC;AAEH,GARD;;AAUA,QAAMC,QAAQ,GAAG,MAAOF,CAAP,IAAa;AAC1BA,IAAAA,CAAC,CAACG,cAAF,GAD0B,CACP;;AACnB,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBxB,IAAzB;;AACA,QAAG;AACC,YAAMyB,GAAG,GAAG,MAAMhC,KAAK,CAACiC,IAAN,CAAW,SAAX,EAAsBJ,QAAtB,EAAgC;AAC9CK,QAAAA,OAAO,EAAE;AAAC,0BAAgB;AAAjB,SADqC;AAE9CC,QAAAA,gBAAgB,EAAGV,CAAD,IAAO;AACrBX,UAAAA,UAAU,CAACsB,IAAI,CAACC,KAAL,CAAY,MAAMZ,CAAC,CAACa,MAAT,GAAiBb,CAAC,CAACc,KAA9B,CAAD,CAAV;AACH;AAJ6C,OAAhC,CAAlB;AAMAC,MAAAA,OAAO,CAACC,GAAR,CAAYT,GAAZ;AACA/B,MAAAA,KAAK,CAACyC,OAAN,CAAc,YAAd;AACAC,MAAAA,UAAU,CAAC,MAAM;AACb7B,QAAAA,UAAU,CAAC,CAAD,CAAV;AACAF,QAAAA,WAAW,CAACN,eAAD,CAAX;AACAI,QAAAA,WAAW,CAAC,IAAD,CAAX;AACH,OAJS,EAIP,IAJO,CAAV;AAMH,KAfD,CAeC,OAAMkC,GAAN,EAAU;AACP3C,MAAAA,KAAK,CAAC4C,KAAN,CAAYD,GAAG,CAACE,OAAhB;AACAhC,MAAAA,UAAU,CAAC,CAAD,CAAV;AACAF,MAAAA,WAAW,CAACN,eAAD,CAAX;AACAI,MAAAA,WAAW,CAAC,IAAD,CAAX;AACA8B,MAAAA,OAAO,CAACK,KAAR,CAAcD,GAAd;AACH;AACJ,GA1BD;;AA4BA,sBACI;AAAM,IAAA,QAAQ,EAAEjB,QAAhB;AAAA,4BACI;AAAK,MAAA,GAAG,EAAElB,MAAV;AAAkB,MAAA,SAAS,EAAG,iBAAgBA,MAAM,IAAI,oBAAqB;AAA7E;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,WAAD;AAAa,MAAA,OAAO,EAAEI;AAAtB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,iBACKF,QADL,eAEI;AACI,QAAA,EAAE,EAAC,OADP;AAEI,QAAA,IAAI,EAAC,MAFT;AAGI,QAAA,MAAM,EAAC,SAHX;AAII,QAAA,QAAQ,EAAEI;AAJd;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAYI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,KAAK,EAAE;AAACgC,QAAAA,KAAK,EAAE,MAAR;AAAgBC,QAAAA,YAAY,EAAE,CAA9B;AAAiCC,QAAAA,MAAM,EAAE,EAAzC;AAA6CC,QAAAA,MAAM,EAAE;AAArD,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CA7DD;;GAAM/C,U;;KAAAA,U;AA+DN,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport \"./UploadForm.css\"\nimport ProgressBar from './ProgressBar'\n\nconst UploadForm = ({images, setImages}) => {\n    const defaultFileName = \"이미지 파일을 업로드 해주세요.\";\n    const [file, setFile] = useState(null);\n    const [imgSrc, setImageSrc] =  useState(null);\n    const [fileName, setFileName] = useState(defaultFileName);\n    const [percent, setPercent] = useState(0);\n\n    const imageSelectHandler = (event) => {\n        const imageFile = event.target.files[0];\n        setFile(imageFile);\n        setFileName(imageFile.name);\n        const fileReader = new FileReader();\n        fileReader.readAsDataURL(imageFile);\n        fileReader.onload = (e) => setImageSrc(e.target.result);\n\n    };\n\n    const onSubmit = async (e) => {\n        e.preventDefault();// 기본행동(새로고침)방지\n        const formData = new FormData();\n        formData.append(\"image\", file)\n        try{\n            const res = await axios.post(\"/images\", formData, {\n                headers: {\"Content-Type\": \"multipart/form-data\"},\n                onUploadProgress: (e) => {\n                    setPercent(Math.round((100 * e.loaded)/e.total));\n                }\n            });\n            console.log(res);\n            toast.success(\"이미지 업로드 성공\");\n            setTimeout(() => {\n                setPercent(0);\n                setFileName(defaultFileName);\n                setImageSrc(null);\n            }, 3000);\n            \n        }catch(err){\n            toast.error(err.message);\n            setPercent(0);\n            setFileName(defaultFileName);\n            setImageSrc(null);\n            console.error(err);\n        }\n    }\n\n    return(\n        <form onSubmit={onSubmit}>\n            <img src={imgSrc} className={`image-preview ${imgSrc && \"image-preview-show\"}`} />\n            <ProgressBar percent={percent} />\n            <div className=\"file-dropper\">\n                {fileName}\n                <input \n                    id=\"image\" \n                    type=\"file\" \n                    accept=\"image/*\"\n                    onChange={imageSelectHandler}\n                />\n            </div>\n            <button type=\"submit\" style={{width: \"100%\", borderRadius: 3, height: 40, cursor: \"pointer\"}}>제출</button>\n        </form>\n    );\n};\n\nexport default UploadForm;"]},"metadata":{},"sourceType":"module"}